# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests,Utils,CSS_JS}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Helpers\:
        resource: '../../src/AppBundle/Helpers'
        public: true

    AppBundle\EntityListener\:
        resource: '../../src/AppBundle/EntityListener'
        # arguments: ['@service_container']
        public: true
        tags:
            - { name: doctrine.orm.entity_listener }
    

    # productions_listener:
    #     class: AppBundle\EntityListener\ProductionsListener
    #     arguments: ['@service_container']
    #     tags:
    #         - { name: doctrine.orm.entity_listener }
    #     public: true

    # deliveries_listener:
    #     class: AppBundle\EntityListener\DeliveriesListener
    #     arguments: ['@service_container']
    #     tags:
    #         - { name: doctrine.orm.entity_listener }
    #     public: true
  
    helper.trans: 
        alias: AppBundle\Helpers\TransHelper
        public: true
 
    helper.entity: 
        alias: AppBundle\Helpers\EntityHelper
        public: true

    helper.settings: 
        alias: AppBundle\Helpers\SettingsHelper
        public: true
    
    helper.route: 
        alias: AppBundle\Helpers\RouteHelper
        public: true

    generator.filters: 
        alias: AppBundle\Helpers\FiltersGenerator
        public: true
    
 
 
 
        # helper.settings: 
 
        #     alias: '@AppBundle\Helpers\SettingsHelper'
    #     public: true
    # helper.filter: 
    #     alias: '@AppBundle\Helpers\FilterHelper'
    #     public: true
        # class: AppBundle\Helpers\TransHelper
        # # arguments: ["@service_container"]
        # public: true

    # AppBundle\Helpers\TransHelper: '@helper.trans'

    # helper.trans: 
    #     class: AppBundle\Helpers\TransHelper
    #     arguments: ["@translator"]
    #     public: true

    # helper.entity: 
    #     class: AppBundle\Helpers\EntityHelper
    #     # arguments: ["@service_container"]
    #     public: true

    # AppBundle\Helpers\EntityHelper: '@helper.entity'

    # helper.entity: 
    #     class: AppBundle\Helpers\EntityHelper
    #     arguments: ["@doctrine.orm.entity_manager", '@helper.settings']
    #     public: true
   
    # helper.filter: 
    #     class: AppBundle\Helpers\FilterHelper
    #     arguments: ['@service_container']
    #     public: true

    # helper.element: 
    #     class: AppBundle\Helpers\ElementHelper
    #     arguments: ['@service_container']
    #     public: true


    # helper.settings: 
    #     class: AppBundle\Helpers\SettingsHelper
    #     # arguments: ["@doctrine.orm.entity_manager"]
    #     public: true
    
    # orders_listener:
    #     class: AppBundle\EntityListener\OrdersListener
    #     arguments: ['@service_container']
    #     tags:
    #         - { name: doctrine.orm.entity_listener }
    #     public: true


    # app.twig_extension:
    #     class: App\Twig\AppExtension
    #     arguments: ["@translator"]
    #     tags: 
    #         - { name: twig.extension }

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
